openapi: 3.0.1
info:
  title: 프동프동 티켓팅 시스템 API Document
  description: 티켓팅 시스템 백엔드 API입니다.
  version: 1.0.0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /reservations/{id}:
    get:
      tags:
      - reservation-controller
      operationId: getReservation
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReservationResponse'
    put:
      tags:
      - reservation-controller
      operationId: updateReservation
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationUpdateRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReservationResponse'
    delete:
      tags:
      - reservation-controller
      operationId: deleteReservation
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
  /users/signup:
    post:
      tags:
      - user-controller
      operationId: signup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDto'
  /reservations:
    post:
      tags:
      - reservation-controller
      operationId: createReservation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationCreateRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReservationResponse'
  /bookmarks:
    get:
      tags:
      - bookmark-controller
      operationId: getBookmarks
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
      - bookmark-controller
      operationId: addBookmark
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookmarkFromdto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /users/access_token_info:
    get:
      tags:
      - user-controller
      operationId: getAccessTokenInfo
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /health:
    get:
      tags:
      - health-controller
      operationId: healthCheck2
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /events/{id}:
    get:
      tags:
      - event-controller
      operationId: getEvent
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EventResponse'
  /events/:
    get:
      tags:
      - event-controller
      operationId: getEvents
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventResponse'
  /bookmarks/{id}:
    get:
      tags:
      - bookmark-controller
      operationId: getBookmark
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
      - bookmark-controller
      operationId: deleteBookmark
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /:
    get:
      tags:
      - health-controller
      operationId: healthCheck1_1
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
components:
  schemas:
    ReservationUpdateRequest:
      required:
      - eventId
      type: object
      properties:
        eventId:
          type: integer
          format: int32
    ReservationResponse:
      required:
      - bookedAt
      - eventId
      - id
      - userId
      type: object
      properties:
        id:
          type: integer
          format: int32
        eventId:
          type: integer
          format: int32
        userId:
          type: integer
          format: int32
        bookedAt:
          type: string
          format: date-time
    SignUpRequest:
      required:
      - email
      - name
      - password
      type: object
      properties:
        email:
          type: string
        name:
          maxLength: 30
          minLength: 2
          type: string
        password:
          maxLength: 128
          minLength: 9
          type: string
    UserDto:
      required:
      - email
      - name
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        createdAt:
          type: string
          format: date-time
    ReservationCreateRequest:
      required:
      - eventId
      type: object
      properties:
        eventId:
          type: integer
          format: int32
    BookmarkFromdto:
      required:
      - event_id
      type: object
      properties:
        event_id:
          type: integer
          format: int32
    EventResponse:
      required:
      - date
      - id
      - maxAttendees
      - reservationEndTime
      - reservationStartTime
      - title
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
        date:
          type: string
          format: date-time
        reservationStartTime:
          type: string
          format: date-time
        reservationEndTime:
          type: string
          format: date-time
        maxAttendees:
          type: integer
          format: int32
