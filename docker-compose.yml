version: "3"

services:
  db:
    container_name: mysqldb
    image: mysql:8.0.33
    restart: "no"
    environment:
      MYSQL_ROOT_PASSWORD: test
    ports:
      - 3306:3306
    volumes:
      - ./src/intTest/resources/db/mysql/conf.d:/etc/mysql/conf.d
      - ./src/intTest/resources/db/mysql/initdb.d:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ 'CMD-SHELL', 'mysqladmin ping -h 127.0.0.1 -u root --password=$$MYSQL_ROOT_PASSWORD' ]
      interval: 10s
      timeout: 2s
      retries: 100

    networks:
      - spring-network

  redis:
      image: redis:latest
      container_name: redis
      ports:
        - 6379:6379

      labels:
        - 'name=redis'
        - 'mode=standalone'

      restart: 'no'
      command: redis-server

      networks:
        - spring-network

  api:
    container_name: api
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SPRING_PROFILES_ACTIVE: local
      
    restart: "no"
    ports:
      - 8080:8080
    environment:
      PORT: 8080
      MYSQL_HOST: mysqldb
      MYSQL_PORT: 3306
      MYSQL_USERNAME: root
      MYSQL_PASSWORD: test
      MYSQL_SCHEMA: test
      JWT_SECRET: d2VhcmVuYXZ5c3dkZXZlbG9wZXJzLmFuZGlhbW1pbmp1bjMwMjE=
      JWT_EXPIRATION_HOURS: 24
      JWT_ISSUER: minjun
      QUEUE_SERVER_URL : http://localhost
      SPRING_PROFILES_ACTIVE: local
      REDIS_HOST: localhost
      REDIS_PORT: 6379

    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started


    networks:
      - spring-network

networks:
  spring-network:

